@using System.Text.Json
@using System.Web.Helpers
@using Newtonsoft.Json
@model AvailabilityMonitor.Models.Product

<script>
    function copyIndex() {
        var index = document.getElementById("indexValue");
        navigator.clipboard.writeText(index.innerText);
        alert(`Copied ${index.innerText} to clipboard`);
    }
</script>

<script src="https://canvasjs.com/assets/script/canvasjs.min.js" type="text/javascript"></script>
<script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>  
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.bundle.js" integrity="sha512-oM0dc37yV3+DHLyISesrGcv1tbKcQ5PaBo3PH59wedInPsSVJ0oTW53GISbMBD+3UO/WWrXnQ5DCM7hsRNolJQ=="
crossorigin="anonymous" referrerpolicy="no-referrer"></script>

@{
    ViewData["Title"] = "Details";

    // IEnumerable<PriceChange>? priceChanges = ViewData["PriceChanges"] as IEnumerable<PriceChange>;
    // IEnumerable<QuantityChange>? quantityChanges = ViewData["QuantityChanges"] as IEnumerable<QuantityChange>;
}
<h3>@Model.Name</h3>

<div>
    <hr style="height:2px"/>
    <div style="float:left;max-width:70%">
        <h4>Product info</h4>
        <hr style="width:30%"/>
        <dl class="row">
            <dt class = "col-sm-3">
                PrestaShop ID
            </dt>
            <dd class = "col-sm-9">
                @Html.DisplayFor(model => model.PrestashopId)
            </dd>
            <dt class = "col-sm-3">
                Index
            </dt>
            <dd id="indexValue" title="Copy to clipboard" class = "col-sm-9" ondblclick="copyIndex()" style="cursor:pointer">
                @Html.DisplayFor(model => model.Index)
            </dd>
            <dt class = "col-sm-3">
                Wholesale price
            </dt>
            <dd class = "col-sm-9">
                @Html.DisplayFor(model => model.SupplierWholesalePrice)
            </dd>
            <dt class = "col-sm-3">
                Price
            </dt>
            <dd class = "col-sm-9">
                @Html.DisplayFor(model => model.RetailPrice)
            </dd>
            <dt class = "col-sm-3">
                Supplier retail price
            </dt>
            <dd class = "col-sm-9">
                @Html.DisplayFor(model => model.SupplierRetailPrice)
            </dd>
            <dt class = "col-sm-3">
                Supplier quantity
            </dt>
            <dd class = "col-sm-9">
                @Html.DisplayFor(model => model.SupplierQuantity)
            </dd>
            <dt class = "col-sm-3">
                Quantity
            </dt>
            <dd class = "col-sm-9">
                @Html.DisplayFor(model => model.Quantity)
            </dd>
            <dt class = "col-sm-3">
                Visible on supplier page
            </dt>
            <dd class = "col-sm-9">
                @if (Model.IsVisible)
                {
                    <a>Yes</a>
                }
                else
                {
                    <a>No</a>
                }
            </dd>
        </dl>
    </div>
    <div style="float:right;max-width:30%">
        <img src="@Model?.PhotoURL" title="@Model?.Name"/>
    </div>
</div>

<hr style="border: 1px dotted gray;clear:both;background-color:white" />

<div>
    <div style="float:left; width:50%">
        <h4>Price</h4>
        <div id="chartContainer" >
            <canvas id="priceChart"  />
        </div>
    </div>
    <div style="float:left; width:50%">
        <h4>Quantity</h4>
        <div id="chartContainer" >
            <canvas id="quantityChart"  />
        </div>
    </div>
</div>
<div style="clear:both">
    <a asp-action="Edit" asp-route-id="@Model?.ProductId">Edit</a> |
    <a asp-action="Index">Back to List</a>
    <a asp-action="UpdateProductInfo" asp-route-productId="@Model?.ProductId">Update supplier info</a>
</div>


<script type="text/javascript">
const ctxPrice = document.getElementById('priceChart').getContext('2d');
const ctxQuantity = document.getElementById('quantityChart').getContext('2d');

var prices = @ViewData["pricesJson"];
var quantities = @ViewData["quantitiesJson"];
var priceLabels = '@ViewData["priceLabelsJson"]';
var quantityLabels = '@ViewData["quantityLabelsJson"]';

const priceChart = new Chart(ctxPrice, {
    type: 'line',
    data: {
        labels: priceLabels.split(','),
        datasets: [{
        label: 'Price',
        data: prices,
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            y: {
                beginAtZero: true
            }
        }
    }
});

const quantityChart = new Chart(ctxQuantity, {
    type: 'line',
    data: {
        labels: quantityLabels.split(','),
        datasets: [{
        label: 'Quantity',
        data: quantities,
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            y: {
                beginAtZero: true
            }
        }
    }
});
</script>